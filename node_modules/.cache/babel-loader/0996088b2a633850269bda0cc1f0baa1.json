{"ast":null,"code":"'use strict';\n\nvar BuildMail = require('buildmail');\n\nvar libmime = require('libmime');\n\nmodule.exports = function (mail) {\n  return new MailComposer(mail).compile();\n};\n\nmodule.exports.MailComposer = MailComposer;\n/**\n * Creates the object for composing a BuildMail instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\n\nfunction MailComposer(mail) {\n  if (!(this instanceof MailComposer)) {\n    return new MailComposer(mail);\n  }\n\n  this.mail = mail || {};\n  this.message = false;\n}\n/**\n * Builds BuildMail instance\n */\n\n\nMailComposer.prototype.compile = function () {\n  this._alternatives = this.getAlternatives();\n  this._htmlNode = this._alternatives.filter(function (alternative) {\n    return /^text\\/html\\b/i.test(alternative.contentType);\n  }).pop();\n  this._attachments = this.getAttachments(!!this._htmlNode);\n  this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n  this._useAlternative = this._alternatives.length > 1;\n  this._useMixed = this._attachments.attached.length > 1 || this._alternatives.length && this._attachments.attached.length === 1; // Compose MIME tree\n\n  if (this.mail.raw) {\n    this.message = new BuildMail().setRaw(this.mail.raw);\n  } else if (this._useMixed) {\n    this.message = this._createMixed();\n  } else if (this._useAlternative) {\n    this.message = this._createAlternative();\n  } else if (this._useRelated) {\n    this.message = this._createRelated();\n  } else {\n    this.message = this._createContentNode(false, [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {\n      contentType: 'text/plain',\n      content: ''\n    });\n  } // Add custom headers\n\n\n  if (this.mail.headers) {\n    this.message.addHeader(this.mail.headers);\n  } // Add headers to the root node, always overrides custom headers\n\n\n  ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(function (header) {\n    var key = header.replace(/-(\\w)/g, function (o, c) {\n      return c.toUpperCase();\n    });\n\n    if (this.mail[key]) {\n      this.message.setHeader(header, this.mail[key]);\n    }\n  }.bind(this)); // Sets custom envelope\n\n  if (this.mail.envelope) {\n    this.message.setEnvelope(this.mail.envelope);\n  } // ensure Message-Id value\n\n\n  this.message.messageId();\n  return this.message;\n};\n/**\n * List all attachments. Resulting attachment objects can be used as input for BuildMail nodes\n *\n * @param {Boolean} findRelated If true separate related attachments from attached ones\n * @returns {Object} An object of arrays (`related` and `attached`)\n */\n\n\nMailComposer.prototype.getAttachments = function (findRelated) {\n  var attachments = [].concat(this.mail.attachments || []).map(function (attachment, i) {\n    var data;\n    var isMessageNode = /^message\\//i.test(attachment.contentType);\n\n    if (/^data:/i.test(attachment.path || attachment.href)) {\n      attachment = this._processDataUrl(attachment);\n    }\n\n    data = {\n      contentType: attachment.contentType || libmime.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n      contentDisposition: attachment.contentDisposition || (isMessageNode ? 'inline' : 'attachment'),\n      contentTransferEncoding: attachment.contentTransferEncoding\n    };\n\n    if (attachment.filename) {\n      data.filename = attachment.filename;\n    } else if (!isMessageNode && attachment.filename !== false) {\n      data.filename = (attachment.path || attachment.href || '').split('/').pop() || 'attachment-' + (i + 1);\n\n      if (data.filename.indexOf('.') < 0) {\n        data.filename += '.' + libmime.detectExtension(data.contentType);\n      }\n    }\n\n    if (/^https?:\\/\\//i.test(attachment.path)) {\n      attachment.href = attachment.path;\n      attachment.path = undefined;\n    }\n\n    if (attachment.cid) {\n      data.cid = attachment.cid;\n    }\n\n    if (attachment.raw) {\n      data.raw = attachment.raw;\n    } else if (attachment.path) {\n      data.content = {\n        path: attachment.path\n      };\n    } else if (attachment.href) {\n      data.content = {\n        href: attachment.href\n      };\n    } else {\n      data.content = attachment.content || '';\n    }\n\n    if (attachment.encoding) {\n      data.encoding = attachment.encoding;\n    }\n\n    if (attachment.headers) {\n      data.headers = attachment.headers;\n    }\n\n    return data;\n  }.bind(this));\n\n  if (!findRelated) {\n    return {\n      attached: attachments,\n      related: []\n    };\n  } else {\n    return {\n      attached: attachments.filter(function (attachment) {\n        return !attachment.cid;\n      }),\n      related: attachments.filter(function (attachment) {\n        return !!attachment.cid;\n      })\n    };\n  }\n};\n/**\n * List alternatives. Resulting objects can be used as input for BuildMail nodes\n *\n * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n */\n\n\nMailComposer.prototype.getAlternatives = function () {\n  var alternatives = [],\n      text,\n      html,\n      watchHtml,\n      icalEvent;\n\n  if (this.mail.text) {\n    if (typeof this.mail.text === 'object' && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {\n      text = this.mail.text;\n    } else {\n      text = {\n        content: this.mail.text\n      };\n    }\n\n    text.contentType = 'text/plain' + (!text.encoding && libmime.isPlainText(text.content) ? '' : '; charset=utf-8');\n  }\n\n  if (this.mail.watchHtml) {\n    if (typeof this.mail.watchHtml === 'object' && (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)) {\n      watchHtml = this.mail.watchHtml;\n    } else {\n      watchHtml = {\n        content: this.mail.watchHtml\n      };\n    }\n\n    watchHtml.contentType = 'text/watch-html' + (!watchHtml.encoding && libmime.isPlainText(watchHtml.content) ? '' : '; charset=utf-8');\n  }\n\n  if (this.mail.icalEvent) {\n    if (typeof this.mail.icalEvent === 'object' && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {\n      icalEvent = this.mail.icalEvent;\n    } else {\n      icalEvent = {\n        content: this.mail.icalEvent\n      };\n    }\n\n    icalEvent.contentType = 'text/calendar; charset=\"utf-8\"; method=' + (icalEvent.method || 'PUBLISH').toString().trim().toUpperCase();\n\n    if (!icalEvent.headers) {\n      icalEvent.headers = {};\n    }\n\n    icalEvent.headers['Content-Transfer-Encoding'] = 'base64';\n  }\n\n  if (this.mail.html) {\n    if (typeof this.mail.html === 'object' && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {\n      html = this.mail.html;\n    } else {\n      html = {\n        content: this.mail.html\n      };\n    }\n\n    html.contentType = 'text/html' + (!html.encoding && libmime.isPlainText(html.content) ? '' : '; charset=utf-8');\n  }\n\n  [].concat(text || []).concat(watchHtml || []).concat(html || []).concat(icalEvent || []).concat(this.mail.alternatives || []).forEach(function (alternative) {\n    var data;\n\n    if (/^data:/i.test(alternative.path || alternative.href)) {\n      alternative = this._processDataUrl(alternative);\n    }\n\n    data = {\n      contentType: alternative.contentType || libmime.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n      contentTransferEncoding: alternative.contentTransferEncoding\n    };\n\n    if (alternative.filename) {\n      data.filename = alternative.filename;\n    }\n\n    if (/^https?:\\/\\//i.test(alternative.path)) {\n      alternative.href = alternative.path;\n      alternative.path = undefined;\n    }\n\n    if (alternative.raw) {\n      data.raw = alternative.raw;\n    } else if (alternative.path) {\n      data.content = {\n        path: alternative.path\n      };\n    } else if (alternative.href) {\n      data.content = {\n        href: alternative.href\n      };\n    } else {\n      data.content = alternative.content || '';\n    }\n\n    if (alternative.encoding) {\n      data.encoding = alternative.encoding;\n    }\n\n    if (alternative.headers) {\n      data.headers = alternative.headers;\n    }\n\n    alternatives.push(data);\n  }.bind(this));\n  return alternatives;\n};\n/**\n * Builds multipart/mixed node. It should always contain different type of elements on the same level\n * eg. text + attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createMixed = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/mixed', {\n      baseBoundary: this.mail.baseBoundary,\n      textEncoding: this.mail.textEncoding,\n      boundaryPrefix: this.mail.boundaryPrefix,\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  } else {\n    node = parentNode.createChild('multipart/mixed', {\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  }\n\n  if (this._useAlternative) {\n    this._createAlternative(node);\n  } else if (this._useRelated) {\n    this._createRelated(node);\n  }\n\n  [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach(function (element) {\n    // if the element is a html node from related subpart then ignore it\n    if (!this._useRelated || element !== this._htmlNode) {\n      this._createContentNode(node, element);\n    }\n  }.bind(this));\n  return node;\n};\n/**\n * Builds multipart/alternative node. It should always contain same type of elements on the same level\n * eg. text + html view of the same data\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createAlternative = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/alternative', {\n      baseBoundary: this.mail.baseBoundary,\n      textEncoding: this.mail.textEncoding,\n      boundaryPrefix: this.mail.boundaryPrefix,\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  } else {\n    node = parentNode.createChild('multipart/alternative', {\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  }\n\n  this._alternatives.forEach(function (alternative) {\n    if (this._useRelated && this._htmlNode === alternative) {\n      this._createRelated(node);\n    } else {\n      this._createContentNode(node, alternative);\n    }\n  }.bind(this));\n\n  return node;\n};\n/**\n * Builds multipart/related node. It should always contain html node with related attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createRelated = function (parentNode) {\n  var node;\n\n  if (!parentNode) {\n    node = new BuildMail('multipart/related; type=\"text/html\"', {\n      baseBoundary: this.mail.baseBoundary,\n      textEncoding: this.mail.textEncoding,\n      boundaryPrefix: this.mail.boundaryPrefix,\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  } else {\n    node = parentNode.createChild('multipart/related; type=\"text/html\"', {\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  }\n\n  this._createContentNode(node, this._htmlNode);\n\n  this._attachments.related.forEach(function (alternative) {\n    this._createContentNode(node, alternative);\n  }.bind(this));\n\n  return node;\n};\n/**\n * Creates a regular node with contents\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @param {Object} element Node data\n * @returns {Object} BuildMail node element\n */\n\n\nMailComposer.prototype._createContentNode = function (parentNode, element) {\n  element = element || {};\n  element.content = element.content || '';\n  var node;\n  var encoding = (element.encoding || 'utf8').toString().toLowerCase().replace(/[-_\\s]/g, '');\n\n  if (!parentNode) {\n    node = new BuildMail(element.contentType, {\n      filename: element.filename,\n      baseBoundary: this.mail.baseBoundary,\n      textEncoding: this.mail.textEncoding,\n      boundaryPrefix: this.mail.boundaryPrefix,\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  } else {\n    node = parentNode.createChild(element.contentType, {\n      filename: element.filename,\n      disableUrlAccess: this.mail.disableUrlAccess,\n      disableFileAccess: this.mail.disableFileAccess\n    });\n  } // add custom headers\n\n\n  if (element.headers) {\n    node.addHeader(element.headers);\n  }\n\n  if (element.cid) {\n    node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n  }\n\n  if (element.contentTransferEncoding) {\n    node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n  } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n    node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n  }\n\n  if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n    node.setHeader('Content-Disposition', element.contentDisposition || (element.cid ? 'inline' : 'attachment'));\n  }\n\n  if (typeof element.content === 'string' && ['utf8', 'usascii', 'ascii'].indexOf(encoding) < 0) {\n    element.content = new Buffer(element.content, encoding);\n  } // prefer pregenerated raw content\n\n\n  if (element.raw) {\n    node.setRaw(element.raw);\n  } else {\n    node.setContent(element.content);\n  }\n\n  return node;\n};\n/**\n * Parses data uri and converts it to a Buffer\n *\n * @param {Object} element Content element\n * @return {Object} Parsed element\n */\n\n\nMailComposer.prototype._processDataUrl = function (element) {\n  var parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n\n  if (!parts) {\n    return element;\n  }\n\n  element.content = /\\bbase64$/i.test(parts[1]) ? new Buffer(parts[2], 'base64') : new Buffer(decodeURIComponent(parts[2]));\n\n  if ('path' in element) {\n    element.path = false;\n  }\n\n  if ('href' in element) {\n    element.href = false;\n  }\n\n  parts[1].split(';').forEach(function (item) {\n    if (/^\\w+\\/[^\\/]+$/i.test(item)) {\n      element.contentType = element.contentType || item.toLowerCase();\n    }\n  });\n  return element;\n};","map":{"version":3,"sources":["/Users/aftab/Desktop/React/reactlivewebsite-master/node_modules/mailcomposer/lib/mailcomposer.js"],"names":["BuildMail","require","libmime","module","exports","mail","MailComposer","compile","message","prototype","_alternatives","getAlternatives","_htmlNode","filter","alternative","test","contentType","pop","_attachments","getAttachments","_useRelated","related","length","_useAlternative","_useMixed","attached","raw","setRaw","_createMixed","_createAlternative","_createRelated","_createContentNode","concat","shift","content","headers","addHeader","forEach","header","key","replace","o","c","toUpperCase","setHeader","bind","envelope","setEnvelope","messageId","findRelated","attachments","map","attachment","i","data","isMessageNode","path","href","_processDataUrl","detectMimeType","filename","contentDisposition","contentTransferEncoding","split","indexOf","detectExtension","undefined","cid","encoding","alternatives","text","html","watchHtml","icalEvent","isPlainText","method","toString","trim","push","parentNode","node","baseBoundary","textEncoding","boundaryPrefix","disableUrlAccess","disableFileAccess","createChild","element","toLowerCase","Buffer","setContent","parts","match","decodeURIComponent","item"],"mappings":"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","sourcesContent":["'use strict';\n\nvar BuildMail = require('buildmail');\nvar libmime = require('libmime');\n\nmodule.exports = function (mail) {\n    return new MailComposer(mail).compile();\n};\n\nmodule.exports.MailComposer = MailComposer;\n\n/**\n * Creates the object for composing a BuildMail instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\nfunction MailComposer(mail) {\n    if (!(this instanceof MailComposer)) {\n        return new MailComposer(mail);\n    }\n\n    this.mail = mail || {};\n    this.message = false;\n}\n\n/**\n * Builds BuildMail instance\n */\nMailComposer.prototype.compile = function () {\n    this._alternatives = this.getAlternatives();\n    this._htmlNode = this._alternatives.filter(function (alternative) {\n        return /^text\\/html\\b/i.test(alternative.contentType);\n    }).pop();\n    this._attachments = this.getAttachments(!!this._htmlNode);\n\n    this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n    this._useAlternative = this._alternatives.length > 1;\n    this._useMixed = this._attachments.attached.length > 1 || (this._alternatives.length && this._attachments.attached.length === 1);\n\n    // Compose MIME tree\n    if (this.mail.raw) {\n        this.message = new BuildMail().setRaw(this.mail.raw);\n    } else if (this._useMixed) {\n        this.message = this._createMixed();\n    } else if (this._useAlternative) {\n        this.message = this._createAlternative();\n    } else if (this._useRelated) {\n        this.message = this._createRelated();\n    } else {\n        this.message = this._createContentNode(false, [].concat(this._alternatives || []).concat(this._attachments.attached || []).shift() || {\n            contentType: 'text/plain',\n            content: ''\n        });\n    }\n\n    // Add custom headers\n    if (this.mail.headers) {\n        this.message.addHeader(this.mail.headers);\n    }\n\n    // Add headers to the root node, always overrides custom headers\n    [\n        'from',\n        'sender',\n        'to',\n        'cc',\n        'bcc',\n        'reply-to',\n        'in-reply-to',\n        'references',\n        'subject',\n        'message-id',\n        'date'\n    ].forEach(function (header) {\n        var key = header.replace(/-(\\w)/g, function (o, c) {\n            return c.toUpperCase();\n        });\n        if (this.mail[key]) {\n            this.message.setHeader(header, this.mail[key]);\n        }\n    }.bind(this));\n\n    // Sets custom envelope\n    if (this.mail.envelope) {\n        this.message.setEnvelope(this.mail.envelope);\n    }\n\n    // ensure Message-Id value\n    this.message.messageId();\n\n    return this.message;\n};\n\n/**\n * List all attachments. Resulting attachment objects can be used as input for BuildMail nodes\n *\n * @param {Boolean} findRelated If true separate related attachments from attached ones\n * @returns {Object} An object of arrays (`related` and `attached`)\n */\nMailComposer.prototype.getAttachments = function (findRelated) {\n    var attachments = [].concat(this.mail.attachments || []).map(function (attachment, i) {\n        var data;\n        var isMessageNode = /^message\\//i.test(attachment.contentType);\n\n        if (/^data:/i.test(attachment.path || attachment.href)) {\n            attachment = this._processDataUrl(attachment);\n        }\n\n        data = {\n            contentType: attachment.contentType ||\n                libmime.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n            contentDisposition: attachment.contentDisposition || (isMessageNode ? 'inline' : 'attachment'),\n            contentTransferEncoding: attachment.contentTransferEncoding\n        };\n\n        if (attachment.filename) {\n            data.filename = attachment.filename;\n        } else if (!isMessageNode && attachment.filename !== false) {\n            data.filename = (attachment.path || attachment.href || '').split('/').pop() || 'attachment-' + (i + 1);\n            if (data.filename.indexOf('.') < 0) {\n                data.filename += '.' + libmime.detectExtension(data.contentType);\n            }\n        }\n\n        if (/^https?:\\/\\//i.test(attachment.path)) {\n            attachment.href = attachment.path;\n            attachment.path = undefined;\n        }\n\n        if (attachment.cid) {\n            data.cid = attachment.cid;\n        }\n\n        if (attachment.raw) {\n            data.raw = attachment.raw;\n        } else if (attachment.path) {\n            data.content = {\n                path: attachment.path\n            };\n        } else if (attachment.href) {\n            data.content = {\n                href: attachment.href\n            };\n        } else {\n            data.content = attachment.content || '';\n        }\n\n        if (attachment.encoding) {\n            data.encoding = attachment.encoding;\n        }\n\n        if (attachment.headers) {\n            data.headers = attachment.headers;\n        }\n\n        return data;\n    }.bind(this));\n\n    if (!findRelated) {\n        return {\n            attached: attachments,\n            related: []\n        };\n    } else {\n        return {\n            attached: attachments.filter(function (attachment) {\n                return !attachment.cid;\n            }),\n            related: attachments.filter(function (attachment) {\n                return !!attachment.cid;\n            })\n        };\n    }\n};\n\n/**\n * List alternatives. Resulting objects can be used as input for BuildMail nodes\n *\n * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n */\nMailComposer.prototype.getAlternatives = function () {\n    var alternatives = [],\n        text, html, watchHtml, icalEvent;\n\n    if (this.mail.text) {\n        if (typeof this.mail.text === 'object' && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {\n            text = this.mail.text;\n        } else {\n            text = {\n                content: this.mail.text\n            };\n        }\n        text.contentType = 'text/plain' + (!text.encoding && libmime.isPlainText(text.content) ? '' : '; charset=utf-8');\n    }\n\n    if (this.mail.watchHtml) {\n        if (typeof this.mail.watchHtml === 'object' && (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)) {\n            watchHtml = this.mail.watchHtml;\n        } else {\n            watchHtml = {\n                content: this.mail.watchHtml\n            };\n        }\n        watchHtml.contentType = 'text/watch-html' + (!watchHtml.encoding && libmime.isPlainText(watchHtml.content) ? '' : '; charset=utf-8');\n    }\n\n    if (this.mail.icalEvent) {\n        if (typeof this.mail.icalEvent === 'object' && (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)) {\n            icalEvent = this.mail.icalEvent;\n        } else {\n            icalEvent = {\n                content: this.mail.icalEvent\n            };\n        }\n        icalEvent.contentType = 'text/calendar; charset=\"utf-8\"; method=' + (icalEvent.method || 'PUBLISH').toString().trim().toUpperCase();\n        if (!icalEvent.headers) {\n            icalEvent.headers = {};\n        }\n        icalEvent.headers['Content-Transfer-Encoding'] = 'base64';\n    }\n\n    if (this.mail.html) {\n        if (typeof this.mail.html === 'object' && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {\n            html = this.mail.html;\n        } else {\n            html = {\n                content: this.mail.html\n            };\n        }\n        html.contentType = 'text/html' + (!html.encoding && libmime.isPlainText(html.content) ? '' : '; charset=utf-8');\n    }\n\n    [].\n    concat(text || []).\n    concat(watchHtml || []).\n    concat(html || []).\n    concat(icalEvent || []).\n    concat(this.mail.alternatives || []).\n    forEach(function (alternative) {\n        var data;\n\n        if (/^data:/i.test(alternative.path || alternative.href)) {\n            alternative = this._processDataUrl(alternative);\n        }\n\n        data = {\n            contentType: alternative.contentType ||\n                libmime.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n            contentTransferEncoding: alternative.contentTransferEncoding\n        };\n\n        if (alternative.filename) {\n            data.filename = alternative.filename;\n        }\n\n        if (/^https?:\\/\\//i.test(alternative.path)) {\n            alternative.href = alternative.path;\n            alternative.path = undefined;\n        }\n\n        if (alternative.raw) {\n            data.raw = alternative.raw;\n        } else if (alternative.path) {\n            data.content = {\n                path: alternative.path\n            };\n        } else if (alternative.href) {\n            data.content = {\n                href: alternative.href\n            };\n        } else {\n            data.content = alternative.content || '';\n        }\n\n        if (alternative.encoding) {\n            data.encoding = alternative.encoding;\n        }\n\n        if (alternative.headers) {\n            data.headers = alternative.headers;\n        }\n\n        alternatives.push(data);\n    }.bind(this));\n\n    return alternatives;\n};\n\n/**\n * Builds multipart/mixed node. It should always contain different type of elements on the same level\n * eg. text + attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createMixed = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/mixed', {\n            baseBoundary: this.mail.baseBoundary,\n            textEncoding: this.mail.textEncoding,\n            boundaryPrefix: this.mail.boundaryPrefix,\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    } else {\n        node = parentNode.createChild('multipart/mixed', {\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    }\n\n    if (this._useAlternative) {\n        this._createAlternative(node);\n    } else if (this._useRelated) {\n        this._createRelated(node);\n    }\n\n    [].concat(!this._useAlternative && this._alternatives || []).concat(this._attachments.attached || []).forEach(function (element) {\n        // if the element is a html node from related subpart then ignore it\n        if (!this._useRelated || element !== this._htmlNode) {\n            this._createContentNode(node, element);\n        }\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Builds multipart/alternative node. It should always contain same type of elements on the same level\n * eg. text + html view of the same data\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createAlternative = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/alternative', {\n            baseBoundary: this.mail.baseBoundary,\n            textEncoding: this.mail.textEncoding,\n            boundaryPrefix: this.mail.boundaryPrefix,\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    } else {\n        node = parentNode.createChild('multipart/alternative', {\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    }\n\n    this._alternatives.forEach(function (alternative) {\n        if (this._useRelated && this._htmlNode === alternative) {\n            this._createRelated(node);\n        } else {\n            this._createContentNode(node, alternative);\n        }\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Builds multipart/related node. It should always contain html node with related attachments\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createRelated = function (parentNode) {\n    var node;\n\n    if (!parentNode) {\n        node = new BuildMail('multipart/related; type=\"text/html\"', {\n            baseBoundary: this.mail.baseBoundary,\n            textEncoding: this.mail.textEncoding,\n            boundaryPrefix: this.mail.boundaryPrefix,\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    } else {\n        node = parentNode.createChild('multipart/related; type=\"text/html\"', {\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    }\n\n    this._createContentNode(node, this._htmlNode);\n\n    this._attachments.related.forEach(function (alternative) {\n        this._createContentNode(node, alternative);\n    }.bind(this));\n\n    return node;\n};\n\n/**\n * Creates a regular node with contents\n *\n * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n * @param {Object} element Node data\n * @returns {Object} BuildMail node element\n */\nMailComposer.prototype._createContentNode = function (parentNode, element) {\n    element = element || {};\n    element.content = element.content || '';\n\n    var node;\n    var encoding = (element.encoding || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!parentNode) {\n        node = new BuildMail(element.contentType, {\n            filename: element.filename,\n            baseBoundary: this.mail.baseBoundary,\n            textEncoding: this.mail.textEncoding,\n            boundaryPrefix: this.mail.boundaryPrefix,\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    } else {\n        node = parentNode.createChild(element.contentType, {\n            filename: element.filename,\n            disableUrlAccess: this.mail.disableUrlAccess,\n            disableFileAccess: this.mail.disableFileAccess\n        });\n    }\n\n    // add custom headers\n    if (element.headers) {\n        node.addHeader(element.headers);\n    }\n\n    if (element.cid) {\n        node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n    }\n\n    if (element.contentTransferEncoding) {\n        node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n    } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n        node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n    }\n\n    if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n        node.setHeader('Content-Disposition', element.contentDisposition || (element.cid ? 'inline' : 'attachment'));\n    }\n\n    if (typeof element.content === 'string' && ['utf8', 'usascii', 'ascii'].indexOf(encoding) < 0) {\n        element.content = new Buffer(element.content, encoding);\n    }\n\n    // prefer pregenerated raw content\n    if (element.raw) {\n        node.setRaw(element.raw);\n    } else {\n        node.setContent(element.content);\n    }\n\n    return node;\n};\n\n/**\n * Parses data uri and converts it to a Buffer\n *\n * @param {Object} element Content element\n * @return {Object} Parsed element\n */\nMailComposer.prototype._processDataUrl = function (element) {\n    var parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n    if (!parts) {\n        return element;\n    }\n\n    element.content = /\\bbase64$/i.test(parts[1]) ? new Buffer(parts[2], 'base64') : new Buffer(decodeURIComponent(parts[2]));\n\n    if ('path' in element) {\n        element.path = false;\n    }\n\n    if ('href' in element) {\n        element.href = false;\n    }\n\n    parts[1].split(';').forEach(function (item) {\n        if (/^\\w+\\/[^\\/]+$/i.test(item)) {\n            element.contentType = element.contentType || item.toLowerCase();\n        }\n    });\n\n    return element;\n};\n"]},"metadata":{},"sourceType":"script"}